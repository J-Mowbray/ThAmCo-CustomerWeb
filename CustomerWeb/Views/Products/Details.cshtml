@model ProductViewModel
@{
    ViewData["Title"] = Model.Name;
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Products" asp-action="Index">Products</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1>@Model.Name</h1>
                    <span class="badge bg-secondary">@Model.CategoryName</span>
                    <span class="badge bg-info">@Model.BrandName</span>
                </div>
                <small class="text-muted">
                    Stock information last updated: @ViewBag.LastStockUpdate.ToString("yyyy-MM-dd HH:mm:ss")
                </small>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-8">
                    <p class="lead">@Model.Description</p>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h3>@Model.Price.ToString("C")</h3>
                            
                            @if (Model.InStock)
                            {
                                <div class="alert alert-success mb-3">
                                    <i class="bi bi-check-circle-fill"></i> In Stock
                                </div>
                                <button class="btn btn-primary btn-lg w-100">Add to Cart</button>
                            }
                            else
                            {
                                <div class="alert alert-danger mb-3">
                                    <i class="bi bi-x-circle-fill"></i> Out of Stock
                                    @if (Model.ExpectedRestock.HasValue)
                                    {
                                        <p>Expected restock: @Model.ExpectedRestock.Value.ToString("MMMM d, yyyy")</p>
                                    }
                                </div>
                                <button class="btn btn-secondary btn-lg w-100" disabled>Out of Stock</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a asp-action="Index" class="btn btn-outline-secondary">Back to Products</a>
        </div>
    </div>
</div>